// <auto-generated />
using EFC;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFC.Migrations
{
    [DbContext(typeof(PlayerContext))]
    [Migration("20240107183406_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("EFC.Entities.HoleScore", b =>
                {
                    b.Property<int>("HoleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoundId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumOfStrikes")
                        .HasColumnType("INTEGER");

                    b.HasKey("HoleId", "PlayerId", "RoundId");

                    b.HasIndex("PlayerId");

                    b.ToTable("HoleScores");
                });

            modelBuilder.Entity("EFC.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MembershipFee")
                        .HasColumnType("REAL");

                    b.Property<string>("MembershipType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("EFC.Entities.HoleScore", b =>
                {
                    b.HasOne("EFC.Entities.Player", null)
                        .WithMany("HoleScores")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFC.Entities.Player", b =>
                {
                    b.Navigation("HoleScores");
                });
#pragma warning restore 612, 618
        }
    }
}
